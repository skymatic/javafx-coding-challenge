<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.skymatic.javafxtest</groupId>
    <artifactId>javafx-helloworld</artifactId>
    <version>1.1.0</version>

    <organization>
        <name>Skymatic</name>
        <url>https://skymatic.de</url>
    </organization>

    <name>JavaFX Hello World Example</name>
    <description>A JavaFX demo application for testing purpose.</description>
    <url>https://github.com/skymatic/javafx-helloworld</url>

    <scm>
        <connection>scm:git:git@github.com:skymatic/javafx-helloworld.git</connection>
        <developerConnection>scm:git:git@github.com:skymatic/javafx-helloworld.git</developerConnection>
        <url>git@github.com:skymatic/javafx-helloworld.git</url>
    </scm>

    <developers>
        <developer>
            <name>Armin Schrenk</name>
            <email>armin.Schrenk@skymatic.de</email>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>14</maven.compiler.release>
        <java.jpms.modulename>de.skymatic.javafxtest</java.jpms.modulename>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>14</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <assembly.artifact.name>win</assembly.artifact.name>
            </properties>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                </os>
            </activation>
            <properties>
                <assembly.artifact.name>linux</assembly.artifact.name>
            </properties>
        </profile>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
			<properties>
                <assembly.artifact.name>mac</assembly.artifact.name>
            </properties>
        </profile>
	</profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- adds Implementation-Version which can be read during runtime -->
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <mainClass>de.skymatic.javafxtest.App</mainClass>
                        </manifest>
                    </archive>
                    <outputDirectory>${project.build.directory}/libs</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                            <excludeArtifactIds>java-utils</excludeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>jlink</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${env.JAVA_HOME}/bin/jlink</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <commandlineArgs>--strip-debug --no-man-pages --no-header-files --compress=1 --module-path ./libs
                                --add-modules ${java.jpms.modulename} --output ./runtimeImage
                            </commandlineArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jpackage</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${env.JAVA_HOME}/bin/jpackage</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <!-- the maven assembly plugin depend on directory name, so be careful when changing it -->
                            <commandlineArgs>--name helloJavaFX --type app-image -m ${java.jpms.modulename}/${java.jpms.modulename}.App
                                --runtime-image runtimeImage --app-version ${project.version} --vendor "Skymatic GmbH"
                                --description "${project.description}" --icon ${project.basedir}/src/main/resources/skymatic.ico
                            </commandlineArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/resources</directory>
                                    <includes>
                                        <include>version.txt</include>
                                        <include>LICENSE.txt</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>assemble-buildkit</id>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <!-- part of the descriptors depend on the jlink output -->
                                <descriptor>assembly-${assembly.artifact.name}.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                            <finalName>helloJavaFX-${project.version}-${assembly.artifact.name}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.4</version>
                <configuration>
                    <mainClass>de.skymatic.javafxtest.App</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>